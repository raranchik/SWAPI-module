<?php

  use Drupal\Core\Queue\QueueFactory;
  use Drupal\Core\Queue\QueueInterface;
  use Drupal\user\Entity\User;

  /**
   * Implements hook_form_contact_message_swapi_contact_form_form_alter().
   */
  function swapi_form_contact_message_swapi_contact_form_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
  {
    if (\Drupal::currentUser()->isAuthenticated()) {
      $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
      $name = $user->field_name->value;
      $surname = $user->field_surname->value;

      $form['field_name']['widget'][0]['value']['#default_value'] = $name;
      $form['field_surname']['widget'][0]['value']['#default_value'] = $surname;
    }
  }

  /**
   * Implements swapi_form_alter().
   */
  function swapi_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
    $view_names = array('people_table');
    $view = $form_state->getStorage('view');

    if ($form_id == 'views_exposed_form' && in_array($view['view']->id(), $view_names)) {
      $form['field_reference_planet_target_id'] = [
        '#type' => 'entity_autocomplete',
        '#target_type' => 'node',
        '#selection_settings' => [
          'target_bundles' => ['planets', 'field_reference_planet'],
        ],
        '#operator' => 'contains',
      ];
    }

/*    $form['field_reference_planet_target_id']['widget'][0]['uri']['#selection_handler']="default:node";
    $form['field_reference_planet_target_id']['widget'][0]['uri']['#selection_settings']=[
      'target_bundles'=>['planets'=>'planets'],
    ];*/
  }

  function swapi_cron_people_job() {
    $storage_handler = \Drupal::entityTypeManager()->getStorage('node');

    $entity = $storage_handler->loadByProperties(['type' => 'people']);

    $storage_handler->delete($entity);

    $queue_factory = \Drupal::service('queue');

    $queue = $queue_factory->get('people_queue_worker');
    $queue->deleteQueue();

    $People = \Drupal::service('swapi.people_retrieval')->getPeople();

    foreach ($People as $character) {
      if (!array_key_exists('detail',$character)) {
        $queue->createItem($character);
      }
    }
  }

  function swapi_cron_planets_job() {
    $storage_handler = \Drupal::entityTypeManager()->getStorage('node');

    $entity = $storage_handler->loadByProperties(['type' => 'planets']);

    $storage_handler->delete($entity);

    $queue_factory = \Drupal::service('queue');

    $queue = $queue_factory->get('planets_queue_worker');
    $queue->deleteQueue();

    $Planets = \Drupal::service('swapi.planets_retrieval')->getPlanets();

    foreach ($Planets as $planet) {
      if (!array_key_exists('detail',$planet)) {
        $queue->createItem($planet);
      }
    }
  }

  function swapi_cron_films_job() {
    $storage_handler = \Drupal::entityTypeManager()->getStorage('node');

    $entity = $storage_handler->loadByProperties(['type' => 'films']);

    $storage_handler->delete($entity);

    $queue_factory = \Drupal::service('queue');

    $queue = $queue_factory->get('films_queue_worker');
    $queue->deleteQueue();

    $Films = \Drupal::service('swapi.films_retrieval')->getFilms();

    foreach ($Films as $film) {
      if (!array_key_exists('detail',$film)) {
        $queue->createItem($film);
      }
    }
  }

  function swapi_cron_vehicles_job() {
    $storage_handler = \Drupal::entityTypeManager()->getStorage('node');

    $entity = $storage_handler->loadByProperties(['type' => 'vehicles']);

    $storage_handler->delete($entity);

    $queue_factory = \Drupal::service('queue');

    $queue = $queue_factory->get('vehicles_queue_worker');
    $queue->deleteQueue();

    $Vehicles = \Drupal::service('swapi.vehicles_retrieval')->getVehicles();

    foreach ($Vehicles as $vehicle) {
      if (!array_key_exists('detail',$vehicle)) {
        $queue->createItem($vehicle);
      }
    }
  }

  function swapi_cron_starships_job() {
    $storage_handler = \Drupal::entityTypeManager()->getStorage('node');

    $entity = $storage_handler->loadByProperties(['type' => 'starships']);

    $storage_handler->delete($entity);

    $queue_factory = \Drupal::service('queue');

    $queue = $queue_factory->get('starships_queue_worker');
    $queue->deleteQueue();

    $Starships = \Drupal::service('swapi.starships_retrieval')->getStarships();

    foreach ($Starships as $starship) {
      if (!array_key_exists('detail',$starship)) {
        $queue->createItem($starship);
      }
    }
  }

  function swapi_cron_species_job() {
    $storage_handler = \Drupal::entityTypeManager()->getStorage('node');

    $entity = $storage_handler->loadByProperties(['type' => 'species']);

    $storage_handler->delete($entity);

    $queue_factory = \Drupal::service('queue');

    $queue = $queue_factory->get('species_queue_worker');
    $queue->deleteQueue();

    $Species = \Drupal::service('swapi.species_retrieval')->getSpecies();

    foreach ($Species as $specie) {
      if (!array_key_exists('detail',$specie)) {
        $queue->createItem($specie);
      }
    }
  }
